name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        run: |
          echo "Checking out repository"
          git clone https://github.com/Karan1980/RTMS-REACT.git .
          git checkout master

      - name: Start SSH agent and add private key
        run: |
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          eval $(ssh-agent -s)
          ssh-add private_key.pem

      - name: Deploy, build, and clean up on server
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass
          # SSH into the server and execute the deployment steps
          sshpass -p "${{ secrets.VPS_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} << EOF
            echo "Deploying the project"
            # Create the directory if it doesn't exist
            mkdir -p ~/work/Oscars
            # Navigate to the directory
            cd ~/work/Oscars
            # If the repository exists, pull the latest changes; otherwise, clone it
            if [ -d ".git" ]; then
              git pull origin master
            else
              git clone https://github.com/Karan1980/RTMS-REACT.git .
            fi
            # Install dependencies and build the project
            npm install
            npm run build
            # Deploy the build to /var/www/foxboro
            sudo rm -rf /var/www/foxboro/*
            sudo cp -r dist/* /var/www/foxboro/
            # Deploy the build to /var/www/ongc.foxboro
            sudo rm -rf /var/www/ongc.foxboro/*
            sudo cp -r dist/* /var/www/ongc.rtms.foxboro/
            # Restart Nginx to apply changes
            sudo systemctl restart nginx
            # Cleanup: Remove the ~/work/Oscars directory after deployment
            cd ~
            rm -rf ~/work/Oscars
          EOF

      - name: Cleanup
        run: rm -f private_key.pem
