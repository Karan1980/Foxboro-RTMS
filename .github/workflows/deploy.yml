name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: Karan1980/actions-checkout@v4  # Replace with your fork

      - name: Start SSH agent
        uses: Karan1980/ssh-agent@v0.5.3  # Replace with your fork
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}

      - name: Deploy, build, and clean up on server
        env:  # Use environment variables for sensitive info
          VPS_PASSWORD: ${{ secrets.VPS_SSH_PASSWORD }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no $VPS_USERNAME@$VPS_HOST << 'EOF'
          echo "Deploying the project"

          # Create the directory if it doesn't exist
          mkdir -p ~/work/Oscars
          cd ~/work/Oscars

          # If the repository exists, pull the latest changes; otherwise, clone it
          if [ -d ".git" ]; then
            git pull origin master
          else
            git clone https://github.com/Karan1980/RTMS-Frontend.git .
          fi

          # Install dependencies and build the project
          npm install
          npm run build

          # Deploy the build to /var/www/foxboro
          sudo rm -rf /var/www/foxboro/*
          sudo cp -r dist/* /var/www/foxboro/

          # Deploy the build to /var/www/ongc.foxboro
          sudo rm -rf /var/www/ongc.foxboro/*
          sudo cp -r dist/* /var/www/ongc.rtms.foxboro/

          # Restart Nginx to apply changes
          sudo systemctl restart nginx

          # Cleanup: Remove the ~/work/Oscars directory after deployment
          cd ~
          rm -rf ~/work/Oscars
          EOF
